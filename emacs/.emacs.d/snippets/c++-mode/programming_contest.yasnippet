# -*- mode: snippet -*-
# name: programming_contest
# key: programming_contest
# --
#include <bits/stdc++.h>

using namespace std;

#define umap std::unordered_map
#define uset std::unordered_set
#define _all(container) std::begin(container), std::end(container)
#define _in(container, value) (std::find(_all(container), value) != std::end(container))
#define _in_if(container, predicate) (std::find_if(_all(container), predicate) != std::end(container))
#define _count(container, value) (std::count(_all(container), value))
#define _count_if(container, predicate) (std::count(_all(container), predicate))
#define _odd(value) (value & 1)
#define _even(value) !(value & 1)
#define _for(i, n) for (int i = 0; i < n; ++i)
#define _FOR(i, k, n) for (int i = k; i <= n; ++i)
#define _FORR(i, k, n) for (int i = n; i >= k; --i)

template <typename DATA_TYPE> using V = std::vector<DATA_TYPE>;
template <typename DATA_TYPE> using VV = std::vector<std::vector<DATA_TYPE>>;
template <typename DATA_TYPE> using C = const DATA_TYPE;
using vint = V<int>;
using pint = std::pair<int, int>;
using vpint = V<pint>;
using vdouble = V<double>;
using cint = C<int>;
using cdouble = C<double>;
using Integer = long long;

void solve() {}

int main(int argc, char **) {
  ios::sync_with_stdio(false);
  cin.tie(0);

  solve();
}
